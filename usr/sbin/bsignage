#!/bin/bash

# carica il file di configurazione che contiene gli url da mostrare
source /etc/bsignage/bsignage.conf

# Controlla se Firefox è installato
if ! command -v firefox &> /dev/null; then
    echo "Firefox non è installato. Assicurati di averlo installato prima di eseguire lo script."
    exit 1
fi

# Loop esterno per ciclare attraverso l'array
while true; do
    # Loop attraverso ogni URL nell'array
    for item in "${urls[@]}"; do
        # Estrai l'URL e la durata di sleep da ogni elemento dell'array
        url=$(echo "$item" | awk '{print $1}')
        sleep_duration=$(echo "$item" | awk '{print $2}')

	#TODO: Eventualmente controllare se l'url funziona
	# non è strettamente necessario poiché lo script non arresta l'esecuzione
	# ma permetterebbe di evitare che lo script resti per n secondi su un sito inattivo

        # Mostra l'URL
        echo "Apro $url per $sleep_duration secondi"

        # Apri Chromium con l'URL specificato
	# La riga seguente è commentata se si usa firefox
#        chromium --no-first-run --disable --disable-translate --disable-infobars --disable-suggestions-service --disable-save-password-bubble --start-maximized --kiosk "$url" &
	#chromium "$url" &
	
	# In questo modo non dovrebbe esserci bisogno di killare
	# chromium e aprire una nuona istanza. Tuttavia occorre modificare
	# Firefox per accettare i nuovi url sulla stessa pagina
	# Su Firefox andare su about:config
	# cercare l'opzione browser.link.open_newwindow e impostare 
	# il valore a 1
	# https://kb.mozillazine.org/Browser.link.open_newwindow
	firefox -kiosk "$url" &

	# Salva il PID di Chromium
	# La riga seguente è commentata poiché se si usa firefox non c'è
	# bisogno di killarlo
#        chromium_pid=$!

        # Aspetta per il numero di secondi specificato
        sleep "$sleep_duration"

        # Chiudi Chromium
	# vedi commento sopra
#        kill "$chromium_pid"

    done
done


